// –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á—ë—Ç–æ–≤
function executeCalculation() {
    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å –ø–æ–ª—è –≤–≤–æ–¥–∞
    let bookInput = parseFloat(cleanFormattedNumber(document.getElementById('bookInput').value));
    let hourglassInput = parseFloat(cleanFormattedNumber(document.getElementById('hourglassInput').value));
    let lastKilled1Input = parseInt(cleanFormattedNumber(document.getElementById('lastKilled1Input').value));
    let lastKilled2Input = parseInt(cleanFormattedNumber(document.getElementById('lastKilled2Input').value));
    let incomingKilled1Input = parseInt(cleanFormattedNumber(document.getElementById('incomingKilled1Input').value));
    let incomingKilled2Input = parseInt(cleanFormattedNumber(document.getElementById('incomingKilled2Input').value));
    let totalKilled1Input = parseInt(cleanFormattedNumber(document.getElementById('totalKilled1Input').value));
    let totalKilled2Input = parseInt(cleanFormattedNumber(document.getElementById('totalKilled2Input').value));
    let lastInput1 = parseInt(cleanFormattedNumber(document.getElementById('lastInput1').value));
    let lastInput2 = parseInt(cleanFormattedNumber(document.getElementById('lastInput2').value));
    let newInput1 = parseInt(cleanFormattedNumber(document.getElementById('death1Input').value));
    let newInput2 = parseInt(cleanFormattedNumber(document.getElementById('death2Input').value));

    // –ü–æ–ª—É—á–∞–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª–∏
    let guildMultiplier = parseFloat(document.getElementById('guild-multiplier-3').value);
    let portalMultiplier = parseFloat(document.getElementById('portal-multiplier-3').value);

    // –†–∞—Å—á—ë—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ
    let result = ((newInput1 - lastInput1) / 100 + (newInput2 - lastInput2) / 10) * guildMultiplier * portalMultiplier;
    result = result.toFixed(2); // –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è üìñ –∏ ‚è≥
    bookInput += parseFloat(result);
    hourglassInput += parseFloat(result);

    // –†–∞—Å—á—ë—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π:
    // –ü–æ—Å–ª. —É–±–∏—Ç—ã–µ
    let lastKilled1 = newInput1 - lastInput1;
    let lastKilled2 = newInput2 - lastInput2;

    // –û–±—â–∏–µ —É–±–∏—Ç—ã–µ
    let totalKilled1 = newInput1 - incomingKilled1Input;
    let totalKilled2 = newInput2 - incomingKilled2Input;

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –≤–≤–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    lastInput1 = newInput1;
    lastInput2 = newInput2;

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ UI
    document.getElementById('bookInput').value = bookInput.toFixed(2);
    document.getElementById('hourglassInput').value = hourglassInput.toFixed(2);
    document.getElementById('lastKilled1Input').value = lastKilled1;
    document.getElementById('lastKilled2Input').value = lastKilled2;
    document.getElementById('totalKilled1Input').value = totalKilled1;
    document.getElementById('totalKilled2Input').value = totalKilled2;
    document.getElementById('lastInput1').value = lastInput1;
    document.getElementById('lastInput2').value = lastInput2;
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
function saveData() {
    const username = document.getElementById('username').value;
    if (username) {
        const data = {
            death1: cleanFormattedNumber(document.getElementById('death1Input').value),
            death2: cleanFormattedNumber(document.getElementById('death2Input').value),
            last1: cleanFormattedNumber(document.getElementById('lastInput1').value),
            last2: cleanFormattedNumber(document.getElementById('lastInput2').value),
            book: cleanFormattedNumber(document.getElementById('bookInput').value),
            hourglass: cleanFormattedNumber(document.getElementById('hourglassInput').value),
            incoming1: cleanFormattedNumber(document.getElementById('incomingKilled1Input').value),
            incoming2: cleanFormattedNumber(document.getElementById('incomingKilled2Input').value),
            total1: cleanFormattedNumber(document.getElementById('totalKilled1Input').value),
            total2: cleanFormattedNumber(document.getElementById('totalKilled2Input').value),
            new1: cleanFormattedNumber(document.getElementById('newInputs1').value),
            new2: cleanFormattedNumber(document.getElementById('newInputs2').value),
            lastKilled1: cleanFormattedNumber(document.getElementById('lastKilled1Input').value),
            lastKilled2: cleanFormattedNumber(document.getElementById('lastKilled2Input').value)
        };
        localStorage.setItem(`userData_${username}`, JSON.stringify(data));
        alert("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!");
    } else {
        alert('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
function restoreData() {
    const username = document.getElementById('username').value;
    if (username) {
        const savedData = localStorage.getItem(`userData_${username}`);
        if (savedData) {
            const data = JSON.parse(savedData);
            document.getElementById('death1Input').value = formatNumber(data.death1 || 0);
            document.getElementById('death2Input').value = formatNumber(data.death2 || 0);
            document.getElementById('lastInput1').value = formatNumber(data.last1 || 0);
            document.getElementById('lastInput2').value = formatNumber(data.last2 || 0);
            document.getElementById('bookInput').value = formatNumber(data.book || 0);
            document.getElementById('hourglassInput').value = formatNumber(data.hourglass || 0);
            document.getElementById('incomingKilled1Input').value = formatNumber(data.incoming1 || 0);
            document.getElementById('incomingKilled2Input').value = formatNumber(data.incoming2 || 0);
            document.getElementById('totalKilled1Input').value = formatNumber(data.total1 || 0);
            document.getElementById('totalKilled2Input').value = formatNumber(data.total2 || 0);
            document.getElementById('newInputs1').value = formatNumber(data.new1 || 0);
            document.getElementById('newInputs2').value = formatNumber(data.new2 || 0);
            document.getElementById('lastKilled1Input').value = formatNumber(data.lastKilled1 || 0);
            document.getElementById('lastKilled2Input').value = formatNumber(data.lastKilled2 || 0);
            alert('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.');
        } else {
            alert('–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
        }
    } else {
        alert('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
function editData() {
    // –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–æ–ª—è –≤–≤–æ–¥–∞, –∫—Ä–æ–º–µ üíÄ: –∏ ‚ò†Ô∏è:
    document.querySelectorAll('.input-field').forEach(input => {
        if (!input.id.includes('death1Input') && !input.id.includes('death2Input')) {
            input.removeAttribute('disabled');
        }
    });

    document.getElementById('saveEditButton').style.display = 'inline-block'; // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
    document.getElementById('editButton').style.display = 'inline-block'; // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function saveEdit() {
    // –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–æ–ª—è –≤–≤–æ–¥–∞, –∫—Ä–æ–º–µ üíÄ: –∏ ‚ò†Ô∏è:
    document.querySelectorAll('.input-field').forEach(input => {
        if (!input.id.includes('death1Input') && !input.id.includes('death2Input')) {
            input.setAttribute('disabled', 'disabled');
        }
    });

    document.getElementById('saveEditButton').style.display = 'none'; // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
    document.getElementById('editButton').style.display = 'inline-block'; // –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
}

function cleanFormattedNumber(inputValue) {
    return inputValue.replace(/\s+/g, ''); // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã
}

function cleanFormattedNumber(inputValue) {
    return inputValue.replace(/\s+/g, ''); // –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã
}
